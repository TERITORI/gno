# start a new node
gnoland start

gnokey maketx addpkg -pkgdir $WORK -pkgpath gno.land/r/demo/ee -gas-fee 1000000ugnot -gas-wanted 2500000 -broadcast -chainid=tendermint_test test1
stdout OK!
stdout 'GAS WANTED: 2500000'
stdout 'GAS USED: [0-9]+'
stdout 'HEIGHT: [0-9]+'
stdout 'EVENTS: \[\]'

gnokey maketx call -pkgpath gno.land/r/demo/ee -func Sender -gas-fee 1000000ugnot -gas-wanted 2000000 -broadcast -chainid=tendermint_test test1
stdout OK!
stdout 'GAS WANTED: 2000000'
stdout 'GAS USED: [0-9]+'
stdout 'HEIGHT: [0-9]+'
stdout 'EVENTS: \[\{("type":"\w+","pkg_path":".*?","identifier":"\w+","attributes":\[(?:\{"key":"\w+","value":"\w+"\}(?:,)?)*\])\}(?:,\{("type":"\w+","pkg_path":".*?","identifier":"\w+","attributes":\[(?:\{"key":"\w+","value":"\w+"\}(?:,)?)*\])\})*\]'

gnokey maketx call -pkgpath gno.land/r/demo/ee -func Receiver -gas-fee 1000000ugnot -gas-wanted 2000000 -broadcast -chainid=tendermint_test test1
stdout OK!
stdout 'GAS WANTED: 2000000'
stdout 'GAS USED: [0-9]+'
stdout 'HEIGHT: [0-9]+'
stdout 'EVENTS: \[\{("type":"\w+","pkg_path":".*?","identifier":"\w+","attributes":\[(?:\{"key":"\w+","value":"\w+"\}(?:,)?)*\])\}(?:,\{("type":"\w+","pkg_path":".*?","identifier":"\w+","attributes":\[(?:\{"key":"\w+","value":"\w+"\}(?:,)?)*\])\})*\]'

-- ee.gno --
package ee

import (
	"std"
)

const (
	EventSender = "sender"
	EventReceiver = "receiver"
)

func Sender(){
    SubSender()
    SubReceiver()
}

func SubSender() {
    std.Emit(
        EventSender,
		"key1", "value1",
		"key2", "value2",
		"key3", "value3",
    )  
}

func SubReceiver() {
    std.Emit(
        EventReceiver,
        "bar", "baz",
    )
}

func Receiver() {
    std.Emit(
        EventReceiver,
        "foo", "bar",
    )
}
